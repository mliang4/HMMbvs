library(HMMbvs)
set.seed(125)
df = sim_data(ind=150, window=30, emisP0=0.95, emisP1=0.95, pt=30, pe=20, bval=c(0.7,1.0,1.5))
print(df$DATA[25:35,],row.names = F)
data=df$DATA
# colnames(data$DATA)
tcova = list("t01"=c("tVar2","tVar3","tVar4","tVar5","tVar6","tVar7"),
"t10"=c("tVar2","tVar4","tVar5","tVar7","tVar8"))
tforce = list("tf01"=c("tVar2","tVar4"),
"tf10"=c("tVar4","tVar7","tVar8"))
ecova = list("e00"=c("eVar2","eVar3","eVar4","eVar5"),
"e11"=c("eVar3","eVar5","eVar7"))
eforce = list("ef00"=c("eVar2"))
tran01 = tcova$t01
tran10 = tcova$t10
fin01 = tforce$tf01
fin10 = tforce$tf10
xt = union(tran01,tran10)
datat = as.data.frame(data)
datat = datat[xt]
# add intercept
# if(addint){
datat = cbind(1,datat)
tran01 = c("int",tran01)
tran10 = c("int",tran10)
xt = union(tran01,tran10)
ecova=c("eVar2","eVar3","eVar4","eVar5","eVar6","eVar7","eVar8")
eforce=NULL
if(length(ecova)!=2){
ecova = list("e00"=ecova,
"e11"=ecova)
}
emis00 = ecova$e00
emis11 = ecova$e11
fin00 = eforce$ef00
fin11 = eforce$ef11
xe = union(emis00,emis11)
datae = as.data.frame(data)
datae = datae[xe]
# if(addint){
datae = cbind(1,datae)
emis00 = c("int",emis00)
emis11 = c("int",emis11)
xe = union(emis00,emis11)
id = data$id
y = data$y
delta = data$delta
datmat = cbind(id,datat,datae,y,delta)
fout01 = setdiff(xt,tran01)
fout10 = setdiff(xt,tran10)
fout00 = setdiff(xe,emis00)
fout11 = setdiff(xe,emis11)
pt = length(xt)
pe = length(xe)
klist0 = seq(0,2*(pt+pe)-1)
fixin = c(2+c(0,pt,2*pt,2*pt+pe),
which(colnames(datmat) %in% fin01),
pt + which(colnames(datmat) %in% fin10),
pt + which(colnames(datmat) %in% fin00),
pt+pe + which(colnames(datmat) %in% fin11))-1
fixout = c(which(colnames(datmat) %in% fout01),
pt + which(colnames(datmat) %in% fout10),
pt + which(colnames(datmat) %in% fout00),
pt+pe + which(colnames(datmat) %in% fout11))-1
klist = klist0[-which(klist0 %in% sort(c(klist0[c(fixin,fixout)])))]
tran01
tran10
colnames(datmat)
id = data$id
y = data$y
delta = data$delta
data$delta = time2delta(data$obstime)
delta = data$delta
datmat = cbind(id,datat,datae,y,delta)
fout01 = setdiff(xt,tran01)
fout10 = setdiff(xt,tran10)
fout00 = setdiff(xe,emis00)
fout11 = setdiff(xe,emis11)
pt = length(xt)
pe = length(xe)
klist0 = seq(0,2*(pt+pe)-1)
fixin = c(2+c(0,pt,2*pt,2*pt+pe),
which(colnames(datmat) %in% fin01),
pt + which(colnames(datmat) %in% fin10),
pt + which(colnames(datmat) %in% fin00),
pt+pe + which(colnames(datmat) %in% fin11))-1
fixout = c(which(colnames(datmat) %in% fout01),
pt + which(colnames(datmat) %in% fout10),
pt + which(colnames(datmat) %in% fout00),
pt+pe + which(colnames(datmat) %in% fout11))-1
klist = klist0[-which(klist0 %in% sort(c(klist0[c(fixin,fixout)])))]
colnames(datmat)
colnames(datmat) %in% tran01
index01 = which(colnames(datmat) %in% tran01)-1
index10 = pt+which(colnames(datmat) %in% tran10)-1
index00 = pt+which(colnames(datmat) %in% emis00)-1
index11 = pt+pe+which(colnames(datmat) %in% emis11)-1
index01
pt
length(tran01)
c(1,index01,length(tran01)+1,index10,length(c(tran01,tran10))+1,index00,length(c(tran01,tran10,tran00))+1,index11)
c(1,
index01,
length(tran01)+1,
index10,
length(c(tran01,tran10))+1,
index00,
length(c(tran01,tran10,emis00))+1,
index11)
index10
c(1,
index01,
pt+1,
index10,
2*pt+1,
index00,
2*pt+pe+1,
index11)
klist
tran01
tran10
index11
colnames(datmat)
emis11
pt
pe
xe
# colnames(data$DATA)
tcova = list("t01"=c("tVar2","tVar3","tVar4","tVar5","tVar6","tVar7"),
"t10"=c("tVar2","tVar4","tVar5","tVar7","tVar8"))
tforce = list("tf01"=c("tVar2","tVar4"),
"tf10"=c("tVar4","tVar7","tVar8"))
ecova = list("e00"=c("eVar2","eVar3","eVar4","eVar5"),
"e11"=c("eVar3","eVar5","eVar7"))
eforce = list("ef00"=c("eVar2"))
data = data[order(data$id,data$obstime),]
data$delta = time2delta(data$obstime)
tran01 = tcova$t01
tran10 = tcova$t10
fin01 = tforce$tf01
fin10 = tforce$tf10
xt = union(tran01,tran10)
datat = as.data.frame(data)
datat = datat[xt]
# add intercept
# if(addint){
datat = cbind(1,datat)
tran01 = c("int",tran01)
tran10 = c("int",tran10)
xt = union(tran01,tran10)
# ecova=c("eVar2","eVar3","eVar4","eVar5","eVar6","eVar7","eVar8")
# eforce=NULL
# if(length(ecova)!=2){
#   ecova = list("e00"=ecova,
#                "e11"=ecova)
# }
emis00 = ecova$e00
emis11 = ecova$e11
fin00 = eforce$ef00
fin11 = eforce$ef11
xe = union(emis00,emis11)
datae = as.data.frame(data)
datae = datae[xe]
# if(addint){
datae = cbind(1,datae)
emis00 = c("int",emis00)
emis11 = c("int",emis11)
xe = union(emis00,emis11)
id = data$id
y = data$y
delta = data$delta
datmat = cbind(id,datat,datae,y,delta)
fout01 = setdiff(xt,tran01)
fout10 = setdiff(xt,tran10)
fout00 = setdiff(xe,emis00)
fout11 = setdiff(xe,emis11)
pt = length(xt)
pe = length(xe)
klist0 = seq(0,2*(pt+pe)-1)
fixin = c(2+c(0,pt,2*pt,2*pt+pe),
which(colnames(datmat) %in% fin01),
pt + which(colnames(datmat) %in% fin10),
pt + which(colnames(datmat) %in% fin00),
pt+pe + which(colnames(datmat) %in% fin11))-1
fixout = c(which(colnames(datmat) %in% fout01),
pt + which(colnames(datmat) %in% fout10),
pt + which(colnames(datmat) %in% fout00),
pt+pe + which(colnames(datmat) %in% fout11))-1
klist = klist0[-which(klist0 %in% sort(c(klist0[c(fixin,fixout)])))]
InitGamma = InitBeta = rep(0,2*pt+2*pe)
InitGamma[fixin] = 1
InitBeta[c(0,pt,2*pt,2*pt+pe)+1]=1
klist
InitGamma = InitBeta = rep(0,2*pt+2*pe)
InitGamma[fixin] = 1
index01 = which(colnames(datmat) %in% tran01)-1
index10 = pt+which(colnames(datmat) %in% tran10)-1
index00 = pt+which(colnames(datmat) %in% emis00)-1
index11 = pt+pe+which(colnames(datmat) %in% emis11)-1
c(1,
index01,
pt+1,
index10,
2*pt+1,
index00,
2*pt+pe+1,
index11)
